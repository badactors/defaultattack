name: Safe two stage cached NPM Pack, Scan, and Publish

on: push

jobs:
  # For demonstration purposes, we will create two jobs
  # We artificially use artifacts to simulate a multi-step process using the same source code
  # In a real-world scenario, you might have different jobs for different tasks doing similar things
  some-npm-prepare-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: 'recursive'
        token: ${{ secrets.CI_CD_TOKEN }}

    - name: Compress source
      run: tar -cvf /tmp/source.tar .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: source-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        path: /tmp/source.tar
        retention-days: 1

  # This job will run after the previous one and will use the source code from the artifact
  some-npm-publish:
    runs-on: ubuntu-latest
    steps: 
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        registry-url: 'https://registry.npmjs.org'

    - name: Download source artifact
      uses: actions/download-artifact@v4
      with:
        name: source-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

    - name: Extract source artifact
      working-directory: .
      run: tar -xvf source.tar

    - name: Install dependencies
      run: npm ci

    - name: Create npm package archive
      id: pack
      run: |
        NPM_PACKAGE_PATH=$(npm pack)
        echo "package_path=${NPM_PACKAGE_PATH}" >> "$GITHUB_OUTPUT"

    - name: Scan package archive with TruffleHog
      run: |
        docker run --rm -v $(pwd):/pwd \
        trufflesecurity/trufflehog:latest \
        filesystem /pwd/${{ steps.pack.outputs.package_path }} --fail

    - name: Publish to NPM
      run: npm publish ./${{ steps.pack.outputs.package_path }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
